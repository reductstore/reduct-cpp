name: ci
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
jobs:
  cpplint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build cpplint image
        run: pip install cpplint
      - name: Check code in /src
        run: find src/ -name "*.cc" -o -name "*.h"  | xargs cpplint
      - name: Check code in /tests
        run: find tests/ -name "*.cc" -o -name "*.h"  | xargs cpplint
      - name: Check code in /exampes
        run: find examples/ -name "*.cc" -o -name "*.h"  | xargs cpplint
  build:
    runs-on: ubuntu-latest
    needs: cpplint
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{github.repository}}:latest
          outputs: type=docker,dest=/tmp/image.tar
          build-args: BUILD_TYPE=Debug
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: /tmp/image.tar

  test-pkg-with-conan:
    runs-on: ubuntu-22.04
    needs: cpplint
    steps:
      - uses: actions/checkout@v2
      - name: Install conan
        run: pip3 install conan==1.58.0
      - uses: ./.github/actions/check-package

  test-pkg-without-conan:
    runs-on: ubuntu-22.04
    needs: cpplint
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/check-package

  tests:
    strategy:
      matrix:
        token: [ "", "TOKEN" ]
        include:
          - token: ""
            tags: "~[token_api]"
          - token: "TOKEN"
            tags: ""
    needs:
      - build
      - test-pkg-with-conan
      - test-pkg-without-conan
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image
          path: /tmp/
      - uses: actions/checkout@v2
      - uses: ./.github/actions/run-tests
        with:
          api-token: ${{matrix.token}}
          tags: ${{matrix.tags}}
