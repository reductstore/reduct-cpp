name: "build-package"
description: "Install package and build example"
inputs:
  install:
    default: "true"
    description: "Install the package after build"
  build_type:
    description: "Type of build (e.g., cmake or conan)"
    required: true
runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/install-conan

    - name: Run conan install
      shell: bash
      run: conan install .

    - name: Detect OS and set preset name
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          echo "PRESET=conan-release" >> $GITHUB_ENV
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "PRESET=conan-default" >> $GITHUB_ENV
        fi

    - name: Cmake configuration
      shell: bash
      run: cmake --preset $PRESET

    - name: Build package
      shell: bash
      run: cmake --build --preset $PRESET

    - name: Install package
      if: ${{inputs.install == 'true' }}
      run: cmake --install build/Release
      shell: bash
    # - name: Build example
    #   if: ${{inputs.install == 'true' }}
    #   shell: bash
    #   run: |
    #     mkdir examples/build
    #     cd examples/build
    #     cmake ..
    #     cmake --build .
