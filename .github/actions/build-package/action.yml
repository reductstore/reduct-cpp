name: "build-package"
description: "Install package and build example"
inputs:
  build_tests:
    default: "false"
  install:
    default: "true"
    description: "Install the package after build"
runs:
  using: "composite"
  steps:
    - uses: ./.github/actions/install-conan

    - name: Run conan install
      shell: bash
      run: conan install . --build=missing -s:a=compiler.cppstd=20

    - name: Detect OS and set preset name
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          echo "PRESET=conan-release" >> $GITHUB_ENV
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "PRESET=conan-default" >> $GITHUB_ENV
        fi

    - name: Cmake configuration without tests
      if: ${{inputs.build_tests == 'false'}}
      shell: bash
      run: cmake --preset $PRESET -DREDUCT_CPP_USE_CONAN=ON

    - name: Cmake configuration with tests
      if: ${{inputs.build_tests == 'true'}}
      shell: bash
      run: cmake --preset $PRESET -DREDUCT_CPP_ENABLE_TESTS=ON -DREDUCT_CPP_USE_CONAN=ON

    - name: Build package
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          cmake --build --preset $PRESET
        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          cmake --build build --config Release
        fi

    - name: Install package
      if: ${{inputs.install == 'true' }}
      run: sudo cmake --install build/Release
      shell: bash
